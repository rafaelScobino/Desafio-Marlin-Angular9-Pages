{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/models/news.model.ts","webpack:///src/app/more-news/more-news.component.ts","webpack:///src/app/more-news/more-news.component.html","webpack:///src/app/more-news/news-form/news-form.component.ts","webpack:///src/app/more-news/news-form/news-form.component.html","webpack:///src/app/more-news/post-feedback/post-feedback.component.ts","webpack:///src/app/more-news/post-feedback/post-feedback.component.html","webpack:///src/app/news-card/news-card.component.ts","webpack:///src/app/news-card/news-card.component.html","webpack:///src/app/news-detail/news-detail.component.ts","webpack:///src/app/news-detail/news-detail.component.html","webpack:///src/app/news-page/news-page.component.ts","webpack:///src/app/news-page/news-page.component.html","webpack:///src/app/page-header/page-header.component.ts","webpack:///src/app/page-header/page-header.component.html","webpack:///src/app/services/api-service.service.ts","webpack:///src/app/side-menu/side-menu.component.ts","webpack:///src/app/side-menu/side-menu.component.html","webpack:///src/app/utils/newsUtils.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","onSameUrlNavigation","providers","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","bootstrap","News","createdAt","image","body","createNews","item","isValid","parseInt","console","error","data","length","MoreNewsComponent","api","router","previewLink","ngOnInit","getValidId","subscribe","validId","log","newsForm","newsTitle","newsImgUrl","newsBody","_isPosted","setPosted","isPosted","setIsMoreNews","NewsFormComponent","formEvent","newsCreatedAt","Date","toISOString","submitNews","f","valid","updateObjNews","NewsObj","formObj","postNews","next","response","requestOk","formEmit","value","emit","newsId","PostFeedbackComponent","feedbackOpts","span","btnText","feedbackRoute","routeParams","postId","postTitle","goToDetails","navigate","queryParams","NewsCardComponent","cardImgUrl","cardTitle","cardBody","detailsLink","detailsParams","cardId","cardTitlePrev","cardBodyPrev","ngOnChanges","changes","cardDetails","isMoreNews","NewsDetailComponent","route","queryParamMap","param","paramId","get","getNewsById","cleanDate","NewsPageComponent","loadedNewsArr","getAllNews","obsvNews","newsArr","url","includes","searchParam","loadNews","initNews","setActiveCards","searchedArray","searchString","finalString","toLowerCase","isSearchOn","cleanLoadedNews","loadMore","qty","numOfCards","PageHeaderComponent","headerSubtitleNum","headerSubtitleSearch","showSubtitle","showSearch","events","pipe","event","params","headerTitle","headerInputs","headerSubtitle","ApiService","http","ApiUrl","transformedData","validData","Array","isArray","map","IdUrl","newsObj","post","headers","reportProgress","itemsArr","idArr","stringIdArr","sort","a","b","getRndId","rndId","news","Math","floor","random","some","element","providedIn","SideMenuComponent","searchPlaceHolder","randomId","sorte","searchNewsRoute","moreNewsRoute","newsDetailRoute","searchNewsUpdate","searchParams","searchText","searchNews","setInterval","reRoute","textToPrev","text","index","preview","slice","transformDate","date","newDate","dia","toLocaleString","day","mes","month","ano","year","moreItems","forArr","pushArr","num","untilNum","i","push","textFilter","filteredArr","filter","routerUrlParams","urlDetails","parseUrl","routeReuse","bol","routeReuseStrategy","shouldReuseRoute","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router'\nimport { NewsDetailComponent } from './news-detail/news-detail.component';\nimport { MoreNewsComponent } from './more-news/more-news.component';\nimport { NewsPageComponent } from './news-page/news-page.component';\n\nconst routes: Routes = [\n  {path:'', component: NewsPageComponent},\n  {path:'news-page', component: NewsPageComponent},\n  {path:'news-detail', component:NewsDetailComponent},\n  {path:'more-news', component:MoreNewsComponent}\n\n];\n\n@NgModule({\n  providers:[],\n  imports: [\n  RouterModule.forRoot(routes,\n    //Definindo comportamento de Router para simular 'reload' da rota do componente\n    {onSameUrlNavigation: 'reload'}\n  )],\n  exports: [RouterModule,CommonModule]\n})\nexport class AppRoutingModule { }","import { Component} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title = 'marlin-app';\n}  \n","<app-page-header></app-page-header>\n<div class=\"flex-div\">\n  <div class=\"main-content\">\n    <router-outlet></router-outlet>\n  </div>\n  <app-side-menu class=\"side-menu\"></app-side-menu>\n</div>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\n\nimport { AppComponent } from './app.component';\nimport { SideMenuComponent } from './side-menu/side-menu.component';\nimport { NewsCardComponent } from './news-card/news-card.component';\nimport { NewsDetailComponent } from './news-detail/news-detail.component';\nimport { MoreNewsComponent } from './more-news/more-news.component';\nimport { NewsFormComponent } from './more-news/news-form/news-form.component';\nimport { PostFeedbackComponent } from './more-news/post-feedback/post-feedback.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { PageHeaderComponent } from './page-header/page-header.component';\nimport { NewsPageComponent } from './news-page/news-page.component';\n\n//Importando service de requests \nimport { ApiService } from './services/api-service.service';\n\n//Importando modulo para configurar dependências do HttpClient\nimport {HttpClientModule} from '@angular/common/http';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SideMenuComponent,\n    NewsCardComponent,\n    NewsDetailComponent,\n    MoreNewsComponent,\n    PageHeaderComponent,\n    NewsPageComponent,\n    PostFeedbackComponent,\n    NewsFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    \n  ],\n  providers: [\n    ApiService,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","//Modelo da classe \"News\" para tratar requests e padronizar \"api-service\"\r\nexport class News {\r\n  createdAt: string;\r\n  title: string;\r\n  image: string;\r\n  body: string;\r\n  id: number;\r\n\r\n  constructor(createdAt: string, title: string, image: string, body: string, id:number) {\r\n        this.createdAt = createdAt;\r\n        this.title = title;\r\n        this.image = image;\r\n        this.body = body;\r\n        this.id = id;\r\n  }\r\n\r\n  //Método para validar dados antes de criar instância da classe\r\n  static createNews(item:{\r\n    createdAt: string;\r\n    title: string;\r\n    image: string;\r\n    body: string;\r\n    id: string;}): News | null {\r\n    \r\n    if (News.isValid(item)) {\r\n\r\n      return new News(\r\n        item.createdAt, \r\n        item.title, \r\n        item.image, \r\n        item.body, \r\n        parseInt(item.id)\r\n      );\r\n\r\n    } else {\r\n      console.error(\"Invalid News data\");\r\n      return null;\r\n    }\r\n  }\r\n\r\n  //Método de validação da classe\r\n  static isValid(data: any): data is News{\r\n    return data && \r\n        typeof data.createdAt === 'string' && data.createdAt.length > 0 &&\r\n        typeof data.title === 'string' && data.title.length > 0 &&\r\n        typeof data.body === 'string' &&\r\n        typeof data.id === 'string' && data.id != '0'; \r\n  }\r\n\r\n}\r\n","import { Component, OnInit, ViewChild} from '@angular/core';\n\n//Importando 'ApiService'\nimport { ApiService } from '../services/api-service.service';\nimport { Router } from '@angular/router';\nimport { NewsFormComponent } from './news-form/news-form.component';\n\n@Component({\n  selector: 'app-more-news',\n  templateUrl: './more-news.component.html',\n  styleUrls: ['./more-news.component.css']\n})\nexport class MoreNewsComponent implements OnInit   {\n\n  @ViewChild('newsForm') newsForm!: NewsFormComponent;\n\n  //Declarando propriedade para 'post-feedback'\n  _isPosted:boolean;\n\n  //Declarando propriedade para WebApi POST\n  validId:string;\n\n  //Declarando propriedade para o link do 'news-card' responsável pela prévia da notícia\n  previewLink:string = '/more-news'\n\n  constructor(private api:ApiService,private router:Router) { }\n\n  ngOnInit(): void {\n    //Gerando nova ID valida para notícia\n    this.api.getValidId().subscribe((data)=>{\n      this.validId = `${data}`\n      console.log(this.validId)\n    })\n\n  }\n\n  //Declarando getters para passar informações do 'news-form' para o 'news-card' da prévia\n  get newsTitle() {\n    return this.newsForm?.newsTitle || '';\n  }\n\n  get newsImgUrl() {\n    return this.newsForm?.newsImgUrl || '';\n  }\n\n  get newsBody() {\n    return this.newsForm?.newsBody || '';\n  }\n\n  get isPosted(){\n    return this._isPosted\n  }\n\n  //Método para receber notificação do forms e ativar o 'post-feedback'\n  setPosted(isPosted: boolean) {\n    this._isPosted = isPosted;\n  }\n\n  //Método para modificar o comportamento do link 'Leia mais' do 'news-card'\n  setIsMoreNews(){\n    return true\n  }\n\n}\n","<app-post-feedback *ngIf=\"isPosted\"\n    [isPosted]=\"isPosted\" \n    [postId]=\"validId\"\n    [postTitle]=\"newsForm.newsTitle\"\n    [isValid]=\"newsForm.isValid\"\n    [requestOk]=\"newsForm.requestOk\"\n></app-post-feedback>\n<main class=\"your-news\">\n    <div class=\"form-div\">\n        <app-news-form\n            #newsForm\n            [id]=\"validId\"\n            (formEvent)=\"setPosted($event)\"\n        ></app-news-form>\n    </div>\n    <section class=\"preview-section\">\n        <app-news-card\n            [title]=\"newsTitle\"\n            [img]=\"newsImgUrl\"\n            [body]=\"newsBody\"\n            [id]=\"validId\"\n            [isMoreNews]=\"setIsMoreNews()\"\n        ></app-news-card>\n    </section>\n</main>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n//Importando model 'News' para formatação de dado\nimport { News } from 'src/app/models/news.model';\n\n//Importando ApiService para request POST\nimport { ApiService } from 'src/app/services/api-service.service';\n\n@Component({\n  selector: 'app-news-form',\n  templateUrl: './news-form.component.html',\n  styleUrls: ['./news-form.component.css']\n})\nexport class NewsFormComponent implements OnInit {\n\n  //Declarando propriedades do component\n  newsCreatedAt:string;\n  newsTitle:string;\n  newsImgUrl:string;\n  newsBody:string;\n  @Input('id') newsId:string;\n\n  //Declarando Objeto 'News'\n  NewsObj:News;\n\n  //Declarando Objeto do Form para formar nova notícia\n  formObj: {\n    createdAt: string;\n    title: string;\n    image: string;\n    body: string;\n    id: string;\n  }\n\n  //Declarando booleanos para lógica do formulário\n  isValid:boolean;\n  requestOk:boolean;\n\n  //Declarando 'EventEmitter' para passar informação para o component pai 'more-news'\n  @Output() formEvent = new EventEmitter<any>();\n\n  constructor(private api:ApiService) { }\n\n  ngOnInit(): void {\n\n    //Atribuindo valor a propriedade 'createdAt'\n    this.newsCreatedAt = new Date().toISOString()\n  }\n\n\n  //Método para checar validade do formulário e acionar o POST\n  submitNews(f:NgForm){\n\n    if(f.valid){\n      this.updateObjNews(),\n      this.NewsObj = News.createNews(this.formObj)\n\n      this.api.postNews(this.NewsObj).subscribe({\n        next: (response: News) => {\n          this.requestOk = true;\n          this.isValid = true;\n          console.log('POST succeeded:', response);\n          this.formEmit(true);\n\n        },\n        error:(error: any) => {\n        console.error('POST failed:', error);\n        this.requestOk = false;\n        this.isValid = true;\n        this.formEmit(true);\n\n        }\n      })\n    }else{\n    this.isValid = false;\n    this.formEmit(true);\n\n    }\n  }\n\n  //Método para emitir o booleano de notícia postada para o component pai 'more-news'\n  formEmit(value:boolean) {\n    this.formEvent.emit(value);\n  }\n\n  //Método para atribuir valores ao 'formObj'\n  updateObjNews():void {\n    this.formObj  = {\n      createdAt:this.newsCreatedAt,\n      title:this.newsTitle,\n      image:this.newsImgUrl,\n      body: this.newsBody,\n      id: this.newsId\n    }\n  }\n\n}\n","<form #newsForm=\"ngForm\" (ngSubmit)=\"submitNews(newsForm)\" class=\"news-form\">\n    <div class=\"input-div\">\n      <label for=\"newsTitle\">Titulo</label>\n      <input class=\"proj-input\" \n              type=\"text\" required  \n              id=\"newsTitle\" \n              name=\"newsTitle\" \n              [(ngModel)]=\"newsTitle\" \n              placeholder=\"Titulo..\">\n    </div>\n    <div class=\"input-div\">\n      <label for=\"newsImgUrl\">Link da imagem \"https://\" \n        <a id=\"open-link\" href=\"{{newsImgUrl}}\" ><img id=\"open-newsImg\" class=\"box-shadow\" src=\"./assets/openIMG.png\" alt=\"imgUrl\"></a>\n      </label>\n      <input class=\"proj-input\" \n              type=\"url\" pattern=\"https://.*\" required \n              id=\"newsImgUrl\" name=\"newsImgUrl\" \n              [(ngModel)]=\"newsImgUrl\" \n              placeholder=\"https://exemplo.com\">\n    </div>\n    <div class=\"input-div textarea-div\">\n      <label for=\"newsBody\">Texto da sua notícia</label>\n      <textarea class=\"proj-input\" \n                  type=\"text\" required \n                  id=\"newsBody\" \n                  name=\"newsBody\" \n                  [(ngModel)]=\"newsBody\" \n                  placeholder=\"Escreva sua notícia!\">\n      </textarea>\n    </div>\n      <button type=\"submit\" class=\"proj-btn\" id=\"submit-btn\">ENVIAR POST</button>\n</form>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n//Importando funções de apoio do NewsUtils\nimport { routeReuse } from 'src/app/utils/newsUtils';\n\n@Component({\n  selector: 'app-post-feedback',\n  templateUrl: './post-feedback.component.html',\n  styleUrls: ['./post-feedback.component.css']\n})\nexport class PostFeedbackComponent implements OnInit {\n\n  //Declarando propriedades do component\n  span:string;\n  btnText:string;\n\n  //Declarando propriedades da lógica do component\n  @Input('isPosted') isPosted:boolean;\n  @Input('postId') postId: string;\n  @Input('postTitle') postTitle:string;\n  @Input() isValid:boolean;\n  @Input() requestOk:boolean;\n\n  //Declarando propriedades de rota\n  feedbackRoute:string;\n  routeParams:{id:number, title:string};\n\n  constructor(private router:Router) { }\n\n  ngOnInit(): void {\n    this.feedbackOpts()\n  }\n\n  //Método responsável por definir o texto do feedback\n  feedbackOpts(){\n\n    if(this.isValid && this.requestOk){\n      this.span = 'Sua Notícia foi enviada com sucesso!';\n      this.btnText = 'Ver Detalhes';\n      this.feedbackRoute = '/news-detail'\n      this.routeParams = {id: parseInt(this.postId), title: this.postTitle}\n\n    }else if(this.isValid){\n      this.span = 'Processo de envio falhou, tente novamente.';\n      this.btnText = 'Tente Novamente';\n      this.feedbackRoute = '/more-news'\n      this.routeParams = {id: null , title:null}\n\n    }else{\n      this.span = ' Notícia NÃO enviada, informações invalidas:  Titulo e corpo vazios, url da imagem não é \"https://\"';\n      this.btnText = 'Tente Novamente';\n      this.feedbackRoute = '/more-news'\n      this.routeParams = {id: null , title:null}\n    }\n  }\n\n  //Método responsável pela navegação  de rota\n  goToDetails(){\n    \n    //Definindo estratégia de rota para impedir o Angular de usar a mesma rota e simular um 'page Refresh'\n    routeReuse(this.router,false)\n    \n    this.router.navigate(\n    [this.feedbackRoute],\n    { queryParams: this.routeParams })\n  }\n}\n","<div class=\"post-feedback\">\n  <div class=\"feedback-box box-shadow\">\n    <div class=\"text-div\">\n      <span>{{span}}</span>\n      <button (click)=\"goToDetails()\" class=\"proj-link\">{{btnText}}</button>\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\n\n//Importando funções de apoio do NewsUtils\nimport {routeReuse, textToPrev} from './../utils/newsUtils';\n\n//Importando ApiService para validar url da imagem\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-news-card',\n  templateUrl: './news-card.component.html',\n  styleUrls: ['./news-card.component.css']\n})\nexport class NewsCardComponent implements OnInit,OnChanges {\n\n  //Declarando propriedades para criação dinâmica de 'news-card'\n  @Input('img') cardImgUrl:string = 'https://developers.elementor.com/docs/assets/img/elementor-placeholder-image.png';\n  @Input('title') cardTitle:string = 'Placeholder Title';\n  @Input('body') cardBody:string = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in';\n  @Input('id') cardId:number;\n  \n  //Declarando propriedades para gerar a prévia\n  cardTitlePrev:string;\n  cardBodyPrev:string;\n\n\n  //Declarando url de rota e parâmetro\n  detailsLink:string;\n  detailsParams:{};\n\n  //Declarando booleano para modificar o comportamento do 'Ler mais'\n  @Input() isMoreNews:boolean;\n\n  constructor(private router:Router) { }\n\n  ngOnInit(): void {\n    \n    //Inicializando url de router detailsLink e parâmetros\n    this.detailsLink = '/news-detail'\n    this.detailsParams = { id: this.cardId, title: this.cardTitle} \n  \n    //Utilizando 'textToPrev' para encurtar o texto do titulo e fazer a prévia\n    this.cardTitlePrev = textToPrev(this.cardTitle,80);\n    \n    //Utilizando 'textToPrev' para encurtar o texto do body e fazer a prévia\n    this.cardBodyPrev = textToPrev(this.cardBody,97);\n  }\n\n  //Utilizando 'ngOnChanges' para modificar a prévia e parâmetro dinamicamente\n  ngOnChanges(changes: SimpleChanges): void {\n\n    if (changes['cardTitle'] || changes['cardBody']) {\n      this.cardTitlePrev = textToPrev(this.cardTitle, 80);\n      this.cardBodyPrev = textToPrev(this.cardBody, 97);\n      this.detailsParams = { id: this.cardId, title: this.cardTitle}\n\n    }\n    if (changes['cardId']) {\n      this.detailsParams = { id: this.cardId, title: this.cardTitle };\n\n    }\n  }\n\n  //Método responsável pela navegação do 'Ler mais'\n  cardDetails(){\n    \n    if(this.isMoreNews){\n      this.router.navigate(['/more-news'],)\n\n    }else{\n      routeReuse(this.router,false)\n      this.router.navigate(\n        [this.detailsLink],\n        { queryParams: this.detailsParams })\n    }\n  }\n\n\n}","<article class=\"news-card box-shadow\">\n    <figure class=\"news-card-figure\">\n        <img class=\"news-card-figure-img\" \n                [src]=\"cardImgUrl\" \n                onerror=\"this.src ='./assets/placeholderImg.jpg'\" alt=\"Imagem da notícia\">\n    </figure>\n    <div class=\"news-card-content-div\">\n        <section class=\"news-card-content\">\n        <div class=\"title-div\">\n            <h4 class=\"news-card-title\">{{cardTitlePrev}}</h4>\n        </div>\n        <div class=\"paragraph-div\">\n            <p class=\"news-card-paragraph\">{{cardBodyPrev}}</p>\n        </div>\n        <button class=\"proj-link\" (click)=\"cardDetails()\">Ler mais</button>\n    </section>\n    </div>\n</article>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n//importando model 'News'\nimport { News } from '../models/news.model';\n\n//Importando 'ApiService'\nimport { ApiService } from '../services/api-service.service';\n\n//Importando função para transformar data do utils\nimport { routeReuse, transformDate } from '../utils/newsUtils';\n\n@Component({\n  selector: 'app-news-detail',\n  templateUrl: './news-detail.component.html',\n  styleUrls: ['./news-detail.component.css']\n})\nexport class NewsDetailComponent implements OnInit {\n\n  //Declarando propriedades para lidar com retorno do GET\n  paramId:number;\n  NewsObj:News;\n  cleanDate:string;\n\n  constructor(private api:ApiService, private route: ActivatedRoute, private router:Router) { }\n\n  ngOnInit(): void {\n\n      //Recebendo e tratando parâmetros da url\n     this.route.queryParamMap.subscribe((param)=>{\n      this.paramId = +param.get('id');\n     })\n\n    //Invocando GET para gerar Objeto 'news'\n    this.api.getNewsById(this.paramId).subscribe((data)=>{\n      this.NewsObj = data\n      \n      //Tratando a 'News.createdAt' para data de detalhes\n      this.cleanDate = transformDate(this.NewsObj.createdAt)\n    })\n\n    //Definindo estratégia de rota para impedir o Angular de usar a mesma rota e simular um 'page Refresh'\n    routeReuse(this.router,false);\n  }\n\n}\n","<article>\r\n    <aside class=\"author-detail\">\r\n        <div>\r\n            <figure class=\"author-detail-figure box-shadow\">\r\n                <img src=\"./assets/blankUser.png\" alt=\"author image\">\r\n                <figcaption><b>Escrito por: </b>Author P. H. PlaceHolder</figcaption>\r\n            </figure>\r\n        </div>\r\n        <time><b>Modificado em: </b>{{cleanDate}}</time>\r\n    </aside>\r\n    <main>\r\n        <section class=\"news-detail-content\">\r\n            <figure class=\"news-detail-figure box-shadow\">\r\n                <img [src]=\"NewsObj.image\" onerror=\"this.src='./assets/placeholderImg.jpg'\" alt=\"Imagem da notícia\">\r\n                <figcaption>{{NewsObj.title}}</figcaption>           \r\n            </figure>\r\n            <div class=\"news-detail-text\">\r\n                <p class=\"news-detail-paragraph\">{{NewsObj.body}}</p>\r\n            </div>\r\n        </section>\r\n    </main>\r\n</article>\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n//Importando ApiService para request GET\nimport { ApiService } from '../services/api-service.service';\n\n//Importando model 'News' para formatação de dado\nimport { News } from '../models/news.model';\n\n//Importando funções de apoio do NewsUtils\nimport { moreItems, textFilter, routeReuse, routerUrlParams } from '../utils/newsUtils';\n\n\n@Component({\n  selector: 'app-news-page',\n  templateUrl: './news-page.component.html',\n  styleUrls: ['./news-page.component.css']\n})\nexport class NewsPageComponent implements OnInit {\n\n  //Declarando array de 'News' e  Objeto 'News'\n  loadedNewsArr:News[] = []; \n  newsArr:News[];\n\n  //Declarando quantidade de notícias\n  numOfCards:number;\n\n  //Declarando booleano para comportamento do loadMore\n  isSearchOn:boolean;\n\n  constructor(private api:ApiService,private router:Router) { }\n  \n  ngOnInit(): void {\n    //Retornando Observable<News[]> e definindo valor de newsArr\n    this.api.getAllNews().subscribe(\n      (obsvNews)=>{\n\n         this.newsArr = obsvNews;\n         if(this.router.url.includes('searchParams')){\n          let searchParam = routerUrlParams(this.router)['searchParams'];\n            this.loadNews(searchParam)\n\n         }else{\n          this.initNews()\n          this.setActiveCards()\n         }\n      })\n\n    //Definindo estratégia de rota para impedir o Angular de usar a mesma rota e simular um 'page Refresh'\n    routeReuse(this.router,true)\n\n  }\n\n  //Método para carregar notícias no Array que gera 'news-card'\n  initNews():void{\n      this.loadedNewsArr = moreItems(this.newsArr,this.loadedNewsArr,6);\n      this.setActiveCards()\n  }\n\n  //Método para retornar Array filtrado pela pesquisa\n  searchedArray(searchString:string):News[]{\n    let finalString:string = searchString.toLowerCase()\n    return textFilter(this.newsArr,finalString)\n  }\n\n  //Método para fazer a lógica de pesquisa e inicialização do component\n  loadNews(searchParam:string):void{\n        this.isSearchOn = true;\n        this.loadedNewsArr = this.searchedArray(searchParam)\n  }\n\n  //Método para limpar Array modificado pela pesquisa\n  cleanLoadedNews(){\n    this.loadedNewsArr = []\n  }\n\n  //Método para carregar mais 'news-card'\n  loadMore():void{\n\n    if(this.isSearchOn){\n      this.cleanLoadedNews()\n      this.isSearchOn = false;\n\n    }\n\n    this.loadedNewsArr =  moreItems(this.newsArr,this.loadedNewsArr,6);\n    this.setActiveCards()\n    this.router.navigate([],{queryParams:{qty:this.numOfCards}});\n  }\n\n   //Método para dar update na propriedade 'numOfCards'\n  setActiveCards():void{\n    this.numOfCards = this.loadedNewsArr.length\n  }\n\n}\n","<section class=\"news-page\">\n    <app-news-card class=\"news-card-item\" *ngFor=\"let news of loadedNewsArr\"\n        [img]=\"news.image\"\n        [title]=\"news.title\"\n        [body]=\"news.body\"\n        [id]=\"news.id\"\n    ></app-news-card>\n</section>\n<div class=\"load-more-div\">\n        <button (click)=\"loadMore()\" class=\"proj-btn\">CARREGAR MAIS NOTÍCIAS</button>\n</div>\n\n","import { Component, Input, OnInit} from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { filter } from 'rxjs/operators';\n\n//Importando funções de apoio do NewsUtils\nimport { routerUrlParams } from '../utils/newsUtils';\n\n@Component({\n  selector: 'app-page-header',\n  templateUrl: './page-header.component.html',\n  styleUrls: ['./page-header.component.css']\n})\nexport class PageHeaderComponent implements OnInit {\n\n  //Declarando propriedades do header component\n  headerTitle:string;\n  headerSubtitle:string;\n  headerSubtitleNum:number = 6;\n  headerSubtitleSearch:string = '';\n\n  //Declarando propriedades passadas pelo component pai para definir titulo e subtitulo \n  @Input('title') inputTitle:string;\n  @Input('subtitle') inputSubtitle: string;\n\n  //Propriedade para NgIf do subtitulo\n  showSubtitle:boolean = true;\n  showSearch: boolean = false;\n\n  constructor(private route: ActivatedRoute, private router:Router) { }\n\n  \n  ngOnInit(): void {\n\n    //Escutando eventos de rota para modificar o component\n    this.router.events.pipe(\n      filter(event => event instanceof NavigationEnd)\n    ).subscribe(() => {\n\n      let url = this.router.url;\n      let params = routerUrlParams(this.router);\n\n      if(params['title']){\n        this.showSubtitle = false;\n        this.showSearch = false;\n        this.headerTitle = params['title'];\n\n      }else if(params['qty']) {\n        this.showSubtitle = true;\n        this.showSearch = false;\n        this.headerSubtitleNum = params['qty']\n        this.headerInputs(url)\n\n      }else if(params['searchParams']){\n        this.showSubtitle = true;\n        this.showSearch = true;\n        this.headerSubtitleSearch  = params['searchParams']\n        this.headerInputs(url)\n\n      }else{\n        this.showSubtitle = true;\n        this.showSearch = false;\n        this.headerInputs(url)\n\n      }\n    }) \n   }\n\n  //Método responsável por lidar com a lógica da definição do titulo e subtitulo do component\n  private headerInputs(url: string): void {\n\n    if (url.includes('/news-detail')) {\n      this.headerTitle = 'Estou com sorte!';\n      this.headerSubtitle = 'Pagina que te traz notícias aleatórias!';\n\n    } else if (url.includes('/more-news')) {\n      this.headerTitle = 'Crie sua Própria Notícia !';\n      this.headerSubtitle = 'Preencha o Formulário, Poste e nos envie sua contribuição !';\n\n    } else if (url.includes('searchParams')) {\n      this.headerTitle = 'Sua Página de Notícias Feita em Angular 9!';\n      this.headerSubtitle = `Aqui estão os resultados para sua busca: `;\n\n    }else{\n      this.headerTitle = 'Sua Página de Notícias Feita em Angular 9!';\n      this.headerSubtitle = `Encontramos um total de ${this.headerSubtitleNum} resultados para sua busca`;\n\n    }\n  }\n\n  \n}\n   \n      \n","<header class=\"page-header\">\n        <h1 class=\"page-header-title\">{{headerTitle}}</h1>\n        <p *ngIf=\"showSubtitle\" class=\"page-header-subtitle\">\n                {{headerSubtitle}} <b *ngIf=\"showSearch\">{{headerSubtitleSearch}}</b>\n        </p>    \n</header> ","//Service responsável por lidar com requests GET e POST\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map} from 'rxjs/operators';\n\n//Importando model 'News' para formatação de dado\nimport { News } from '../models/news.model';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ApiService {\n\n  //Declarando URL da api e seu escopo\n  private ApiUrl = 'https://5cf9ae9df26e8c00146cff8d.mockapi.io/api/v1/post/'\n\n  constructor( private http: HttpClient ) { }\n\n  //Método GET para retornar um Array de notícias → classe 'News'\n  getAllNews():Observable<News[]> {\n  \n    //Retornando 'Observable' e utilizando o método pipe para transformar a data e validar a classe \n    return this.http.get<any[]>(this.ApiUrl).pipe(\n    \n      //Validando 'Observable' como um Array de 'News'\n      map((data)=>{\n\n        //Definindo variáveis\n        let transformedData:any;\n        let validData:News[];\n       \n        //Validando como Array\n        if (Array.isArray(data)){\n\n          //Transformando items em News\n          transformedData = data.map((item)=>{return News.createNews(item)});\n\n          validData = transformedData;\n\n        }else{\n          throw new Error('Observable is not an Array');        \n        }\n\n        return validData;\n\n      }))\n    }\n\n  //Método GET para retornar uma notícia especifica aceitando como parâmetro id:numero\n  getNewsById(id:number):Observable<News>{\n  \n    //Definindo nova url com ID como parâmetro\n    let IdUrl = `${this.ApiUrl}${id}`\n    \n    //Definindo Object News para return\n    let newsObj:News; \n\n    //Retornando 'Observable\" e utilizando pipe para transformar em 'News' e validação\n    return this.http.get<any>(IdUrl).pipe(\n      map((data)=>{\n        \n        //Verificando se a request retorna apenas um item\n        if(!Array.isArray(data)){\n        \n          //Transformando resposta em 'News'\n          newsObj = News.createNews(data);\n          \n            return newsObj;\n          \n        }else{\n          throw new Error('Data return more than one item')\n        } \n        \n      }))\n    }\n\n  //Método POST para gravar News criada\n  postNews(data:News):Observable<News>{\n\n    //Validando input do usuário como News Object\n    if( data instanceof News) {\n\n    //Criando POST para envio dados\n    return this.http.post<News>(this.ApiUrl,data,{ \n    headers:{'Content-type': 'application/json'},\n    reportProgress: true\n    })\n  \n    }else{\n      throw new Error('POST not executed because Data is not valid News')\n    }\n  }\n\n  //Método para criar um novo News.ID valido considerando numero de elementos retornados pelo GET\n  getValidId():Observable<number>{\n    //Definindo Array de items\n    let itemsArr:any[];\n\n    //Definindo Array de items.id\n    let idArr:number[];\n\n    //Chamando GET all\n    return this.http.get<any>(this.ApiUrl).pipe(\n\n      //Tratando Observable\n      map((data)=>{\n      \n        itemsArr =  data;\n\n        //Validando itemsArr como Array\n        if(Array.isArray(itemsArr)){\n          \n          //Logica para retornar um Array de item.id ordenado\n          let stringIdArr = data.map((item: { id: any; })=>{ return item.id})\n          idArr = stringIdArr.map((item: string) => parseInt(item))\n          idArr.sort((a:number, b:number) => a - b)\n          \n          //Validando idArr e definindo o próximo validId\n          if(idArr.length > 0){\n            let validId:number = idArr[idArr.length - 1] + 1   \n\n            return validId;\n\n          }else{\n            throw new Error('idArr is empty');\n          }\n\n        }else{\n          throw new Error (\"couldn't get valid ID\") \n        }\n    }))\n\n  };\n\n  //Método para gerar News.ID randômica para o 'Estou com sorte' do 'side-menu'\n  getRndId():Observable<number>{\n\n    //Definindo Array de News\n    let newsArr:News[];\n\n    //Definindo Array de News.id\n    let idArr:number[];\n\n    //Definindo ID randômico de retorno\n    let rndId:number;\n\n    //Chamando GET all\n    return this.getAllNews().pipe(\n\n      //Tratando Observable\n      map((data)=>{\n      \n        newsArr =  data;\n\n        //Validando newsArr como Array\n        if(Array.isArray(newsArr)){\n          \n          //Logica para retornar um Array de News.id \n          idArr = data.map((news)=>{ return news.id})\n          \n          //Validando idArr e definindo o ID randômico\n          if(idArr.length > 0 && idArr.length === 1){\n            rndId = idArr[0];    \n            return rndId;\n\n          }else if(idArr.length > 1){\n\n            //Lógica para gerar o rndID e validar se ele pertence ao idArr\n            idArr.sort((a,b) =>  a - b)\n            do{\n              rndId = Math.floor(Math.random() * (idArr[idArr.length - 1]))\n\n            }while(!idArr.some(element => element === rndId ))\n\n            return rndId;\n          }\n          \n          else{\n            throw new Error('idArr is empty');\n          }\n\n        }else{\n          throw new Error (\"couldn't get rndID\") \n        }\n    }))\n    \n  };\n\n}\n","import { Component, Input,OnInit } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { filter } from 'rxjs/operators';\n\n//Importando 'ApiService'\nimport { ApiService } from '../services/api-service.service';\n\n//Importando função para transformar data do utils\nimport { routeReuse } from '../utils/newsUtils';\n\n@Component({\n  selector: 'app-side-menu',\n  templateUrl: './side-menu.component.html',\n  styleUrls: ['./side-menu.component.css']\n})\nexport class SideMenuComponent implements OnInit {\n  //Declarando parâmetros de pesquisa\n  @Input() searchText:string;\n\n  //Declarando place holder\n  searchPlaceHolder:string = 'Pesquisar por...';\n\n  //Declarando rotas\n  moreNewsRoute:string;\n  newsDetailRoute:string;\n  searchNewsRoute:string;\n\n  //Declarando parâmetros de Query\n  detailsParams:{};\n  searchParams:{};\n  \n  //Declarando propriedade de News ID randômica\n  randomId:number;\n\n  constructor(private api:ApiService, private router: Router) { }\n\n  ngOnInit(): void {\n\n      //Atribuindo primeiro valor a randomId\n      this.api.getRndId().subscribe(\n        (data)=>{\n          this.randomId = data;\n          \n          //Atribuindo valor a propriedade de parâmetro assincronamente para esperar randomId ter valor e evitar 'undefined'\n          this.detailsParams = { id: this.randomId, sorte: 1};\n        }\n      )\n\n      //Verificando alteração no router para gerar nova randomId\n     this.router.events.pipe(\n        filter(event => event instanceof NavigationEnd)).subscribe(\n          () => {\n          \n          //Reatribuindo valor a randomId\n          this.api.getRndId().subscribe(\n            (data)=>{this.randomId = data;\n            this.detailsParams = { id: this.randomId, sorte: 1};})\n        }\n      );\n\n    //Inicializando valores de rotas\n    this.searchNewsRoute = './'\n    this.moreNewsRoute = \"/more-news\"\n    this.newsDetailRoute = \"/news-detail\"\n  }\n\n  //Método para atualizar parâmetros de busca\n  searchNewsUpdate(){\n    this.searchParams = {searchParams: this.searchText } ;\n  }\n\n  //Método responsável por executar a busca\n  searchNews(){\n    if(this.searchText){\n      routeReuse(this.router,false)\n      this.router.navigate([this.searchNewsRoute],{queryParams: this.searchParams})\n      \n    }else{\n      this.searchPlaceHolder = 'Texto inválido'\n      setInterval(()=>{this.searchPlaceHolder = 'Pesquisar por...'},3000)\n    \n    }\n    this.searchText = ''\n    \n  }\n\n  //Método responsável por definir estratégia de rota para impedir o Angular de usar a mesma rota e simular um 'page Refresh'\n  reRoute(){\n    routeReuse(this.router,false)\n  }\n\n}\n","<aside class=\"side-bar-section\">\n    <div class=\"side-bar-section-category-div\">\n            <h5 name=\"side-bar-section-category-title\">Categorias</h5>\n            <ul name=\"side-bar-section-category-list\">\n                <li class=\"category-list-item\"><a href=\"./\">Lorem ipsum dolor</a></li>\n                <li class=\"category-list-item\"><a href=\"./\">Lorem ipsum dolor</a></li>\n                <li class=\"category-list-item\"><a href=\"./\">Lorem ipsum dolor</a></li>\n                <li class=\"category-list-item\"><a href=\"./\">Lorem ipsum dolor</a></li>\n            </ul>\n    </div>\n    <div class=\"side-bar-section-search-div\">\n        <label for=\"search-input\" class=\"search-div-title\">Procurando alguma notícia?</label>\n        <div class=\"search-div-input box-shadow\">\n            <input id=\"search-input\"\n                type=\"text\" required \n                [(ngModel)]=\"searchText\" \n                (change)=\"searchNewsUpdate()\" \n                placeholder=\"{{searchPlaceHolder}}\">\n            <button (click)=\"searchNews()\"></button>\n        </div>\n    </div>\n    <nav class=\"nav-bar\">\n        <div class=\"home-div\">\n            <a class=\"proj-link\" href=\"./\">\n                <figure>\n                <img src=\"./assets/home.png\" alt=\"home icon\">\n                <figcaption>Início</figcaption>\n                </figure>\n            </a>\n        </div>\n        <ul>\n            <li><a class=\"proj-link\" (click)=\"reRoute()\" [routerLink]=\"newsDetailRoute\" [queryParams]=\"detailsParams\" >Estou com sorte</a></li>\n            <li><a class=\"proj-link\" (click)=\"reRoute()\" [routerLink]=\"moreNewsRoute\" >Sua Notícia</a></li>\n        </ul>\n        </nav>\n</aside>\n","//Arquivo utils para funções de apoio\r\n\r\nimport { Router } from \"@angular/router\";\r\n\r\n//Importando função para transformar data do utils\r\nimport { News } from \"../models/news.model\";\r\n\r\n//Função para encurtar texto com finalidade de criar os 'news-card'\r\nexport function textToPrev(text:string,index:number):string{\r\n\r\n  let preview:string; \r\n    if(text.length > index){\r\n      preview = text.slice(0,index);\r\n\r\n    }else{\r\n     return preview = text;\r\n    }\r\n\r\n  return `${preview}...`;\r\n}\r\n\r\n//Função para transformar Data em string\r\nexport function transformDate(date:string):string{\r\n\r\n    let newDate = new Date(date);\r\n      let dia = newDate.toLocaleString('default',{day: 'numeric'});\r\n      let mes = newDate.toLocaleString('default',{month: 'short'});\r\n      let ano = newDate.toLocaleString('default',{year: 'numeric'});\r\n    let cleanDate =  `${dia} ${mes} ${ano}`;\r\n\r\n    return cleanDate;\r\n}\r\n\r\n//Função para adicionar uma quantidade predefinida de itens de um Array em outro\r\nexport function moreItems(forArr:any[],pushArr:any[],num:number):any[]{\r\n\r\n  let index:number = pushArr.length;\r\n  let untilNum:number\r\n  \r\n    if(pushArr.length > 0 ){\r\n      untilNum = (pushArr.length - 1) + num;\r\n\r\n    }else{\r\n      untilNum = num - 1;\r\n    }\r\n\r\n      if(untilNum >= forArr.length - 1){ \r\n        untilNum = forArr.length - 1;\r\n\r\n      }else{};\r\n\r\n    for(let i = index; i <= untilNum; i++){\r\n      pushArr.push(forArr[i])\r\n    }\r\n\r\n  return pushArr;\r\n}\r\n\r\n//Função para verificar se o Array de Objeto 'News' contêm o texto passado como parâmetro \r\nexport function textFilter(newsArr:News[],text:string):News[]{\r\n\r\n  let filteredArr = newsArr.filter((news)=>\r\n    news.title.toLowerCase().includes(text) || news.body.toLowerCase().includes(text)\r\n  )\r\n\r\n  return filteredArr;   \r\n}\r\n\r\n//Função para retornar os QueryParams de uma url\r\nexport function routerUrlParams(router:Router):any{\r\n    let url = router.url\r\n    let urlDetails = router.parseUrl(url);\r\n    let queryParams = urlDetails.queryParams;\r\n    return queryParams;\r\n  }\r\n\r\n\r\n//Método para redefinir a estratégia de reuso do router\r\nexport function routeReuse(router:Router,bol:boolean){\r\n  router.routeReuseStrategy.shouldReuseRoute = () => { return bol; };\r\n}\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}