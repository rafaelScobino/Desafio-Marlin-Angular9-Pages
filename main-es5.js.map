{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/models/news.model.ts","webpack:///src/app/more-news/more-news.component.ts","webpack:///src/app/more-news/more-news.component.html","webpack:///src/app/news-card/news-card.component.ts","webpack:///src/app/news-card/news-card.component.html","webpack:///src/app/news-detail/news-detail.component.ts","webpack:///src/app/news-detail/news-detail.component.html","webpack:///src/app/news-page/news-page.component.ts","webpack:///src/app/news-page/news-page.component.html","webpack:///src/app/page-header/page-header.component.ts","webpack:///src/app/page-header/page-header.component.html","webpack:///src/app/services/api-service.service.ts","webpack:///src/app/side-menu/side-menu.component.ts","webpack:///src/app/side-menu/side-menu.component.html","webpack:///src/app/utils/newsUtils.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","providers","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","bootstrap","News","createdAt","image","body","isValid","data","transformDate","date","newDate","Date","dia","toLocaleString","day","mes","month","ano","year","newCreatedAt","transformId","parseInt","transformNews","item","newId","transformedNews","MoreNewsComponent","api","formTitle","formBody","ngOnInit","getValidId","subscribe","validId","console","log","toISOString","postYourNews","NewsObj","formImgUrl","postNews","NewsCardComponent","cardImgUrl","cardTitle","cardBody","detailsLink","detailsParams","cardId","cardTitlePrev","cardBodyPrev","ngOnChanges","changes","NewsDetailComponent","route","queryParamMap","param","paramId","get","getNewsById","NewsPageComponent","newsArr","getAllNews","obsNews","PageHeaderComponent","headerTitle","headerSub","ApiService","http","ApiUrl","pipe","transformedData","validData","Array","isArray","map","filter","IdUrl","newsObj","fetch","method","headers","JSON","stringify","response","json","postResult","idArr","news","sort","a","b","length","providedIn","SideMenuComponent","textToPrev","text","index","preview","slice","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ActivatedRoute,Routes, RouterModule } from '@angular/router'\nimport { NewsDetailComponent } from './news-detail/news-detail.component';\nimport { MoreNewsComponent } from './more-news/more-news.component';\nimport { NewsPageComponent } from './news-page/news-page.component';\n\nconst routes: Routes = [\n  {path: '', component: NewsPageComponent},\n  {path:'news-detail', component:NewsDetailComponent},\n  {path:'more-news', component:MoreNewsComponent}\n\n];\n\n@NgModule({\n  providers:[],\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule,CommonModule]\n})\nexport class AppRoutingModule { }","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'marlin-app';\n}\n","<app-page-header\n></app-page-header>\n<div class=\"flex-div\">\n  <div class=\"main-content\">\n    <router-outlet></router-outlet>\n  </div>\n  <app-side-menu class=\"side-menu\"></app-side-menu>\n</div>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport { ActivatedRoute,RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { SideMenuComponent } from './side-menu/side-menu.component';\nimport { NewsCardComponent } from './news-card/news-card.component';\nimport { NewsDetailComponent } from './news-detail/news-detail.component';\nimport { MoreNewsComponent } from './more-news/more-news.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { PageHeaderComponent } from './page-header/page-header.component';\nimport { NewsPageComponent } from './news-page/news-page.component';\n\n//Importando service de requests \nimport { ApiService } from './services/api-service.service';\n\n//Importando modulo para configurar dependências do HttpClient\nimport {HttpClientModule} from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SideMenuComponent,\n    NewsCardComponent,\n    NewsDetailComponent,\n    MoreNewsComponent,\n    PageHeaderComponent,\n    NewsPageComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    \n  ],\n  providers: [\n    ApiService,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","//Modelo da classe \"News\" para tratar requests e padronizar \"api-service\"\r\nexport class News {\r\n  createdAt: string;\r\n  title: string;\r\n  image: string;\r\n  body: string;\r\n  id: number;\r\n\r\n  constructor(createdAt: string, title: string, image: string, body: string, id:number) {\r\n    this.createdAt = createdAt;\r\n    this.title = title;\r\n    this.image = image;\r\n    this.body = body;\r\n    this.id = id;\r\n  }\r\n\r\n  //Método de validação da classe\r\n  static isValid(data: any): data is News{\r\n    return data && \r\n        typeof data.createdAt === 'string' &&\r\n        typeof data.title === 'string' &&\r\n        typeof data.body === 'string' &&\r\n        typeof data.id === 'number'; \r\n  }\r\n\r\n  //Método para transformar data\r\n  static transformDate(date:string):string{\r\n    let newDate = new Date(date);\r\n      let dia = newDate.toLocaleString('default',{day: 'numeric'});\r\n      let mes = newDate.toLocaleString('default',{month: 'short'});\r\n      let ano = newDate.toLocaleString('default',{year: 'numeric'});\r\n    let newCreatedAt =  `${dia} ${mes} ${ano}`;\r\n\r\n    return newCreatedAt;\r\n  }\r\n\r\n  //Método para trasnformar ID\r\n  static transformId(id:string):number{\r\n    return  parseInt(id)\r\n  }\r\n\r\n  //Método para transformar data em uma string apropriada e o id em number\r\n  static transformNews(item:any): News{\r\n    \r\n    //Transformando createdAt\r\n    let newCreatedAt = News.transformDate(item.createdAt)\r\n    \r\n    //Transformando Id\r\n    let newId = News.transformId(item.id)\r\n    \r\n    //Instanciando classe transformada\r\n    let transformedNews = new News(newCreatedAt,item.title,item.image,item.body,newId)\r\n    \r\n    return transformedNews\r\n  }\r\n\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\n\n//importando model 'News'\nimport { News } from '../models/news.model';\n\n//Importando 'ApiService'\nimport { ApiService } from '../services/api-service.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-more-news',\n  templateUrl: './more-news.component.html',\n  styleUrls: ['./more-news.component.css']\n})\nexport class MoreNewsComponent implements OnInit {\n\n  //Declarando Objeto News\n  NewsObj:News;\n\n  //Declarando propriedades para criação dinâmica de 'news-card'\n  @Input() formImgUrl:string;\n  @Input() formTitle:string = '';\n  @Input() formBody:string = '';\n\n  //Declarando propriedade para WebApi POST\n  validId:number;\n  createdAt:string;\n\n  constructor(private api:ApiService) { }\n\n  ngOnInit(): void {\n    this.api.getValidId().subscribe((data)=>{this.validId = data\n      console.log(this.validId)\n    })\n\n    this.createdAt = new Date().toISOString()\n    console.log(this.createdAt)\n\n  }\n\n  postYourNews(){\n  \n  this.NewsObj = new News(\n    this.createdAt,\n    this.formTitle,\n    this.formImgUrl,\n    this.formBody,\n    this.validId\n  )\n\n  console.log(this.NewsObj)\n\n    this.api.postNews(\n      this.NewsObj\n    )\n  }\n\n}\n","<main class=\"your-news\">\n    <form class=\"news-form\">\n            <section class=\"header-inputs\">\n                <div class=\"input-div\">\n                    <label for=\"your-news-title\">Titulo</label>\n                    <input type=\"text\" id=\"your-news-title\" name=\"formTitle\" required  [(ngModel)] = \"formTitle\" placeholder=\"Titulo..\">\n                </div>\n                <div class=\"input-div\">\n                    <label for=\"your-news-img\">Link da image<a id=\"open-link\" href=\"https://ichef.bbci.co.uk/ace/ws/800/cpsprodpb/f28f/live/c1483cc0-60a2-11ef-b76f-f1f593af629e.png.webp\" ><img id=\"open-link-img\" class=\"box-shadow\" src=\"./assets/openIMG.png\" alt=\"open img\"></a></label>\n                    <input type=\"text\" id=\"your-news-img\" name=\"formImgUrl\" required [(ngModel)] = \"formImgUrl\" placeholder=\"URL da imagem\">\n                </div>\n            </section>\n            <div class=\"input-div textarea-div\">\n                <label for=\"your-news-text\">Texto da sua notícia</label>\n                <textarea type=\"text\" id=\"your-news-text\" name=\"formBody\" required [(ngModel)] = \"formBody\" placeholder=\"Escreva sua notícia!\"></textarea>\n            </div>\n            <button type=\"submit\" (click)=\"postYourNews()\" id=\"submit-btn\">Postar</button>\n    </form>\n    <section class=\"preview-section\">\n        <app-news-card\n            [title]=\"formTitle\"\n            [img]=\"formImgUrl\"\n            [body]=\"formBody\"\n            [id]=\"validId\"\n        ></app-news-card>\n    </section>\n</main>\n","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\n\n//Importando arquivo de utils para acesso a funções de apoio\nimport {textToPrev} from './../utils/newsUtils';\n\n//Importando ApiService para validar url da imagem\nimport { ApiService } from '../services/api-service.service';\n\n@Component({\n  selector: 'app-news-card',\n  templateUrl: './news-card.component.html',\n  styleUrls: ['./news-card.component.css']\n})\nexport class NewsCardComponent implements OnInit,OnChanges {\n\n  //Definindo propriedades para criação dinâmica de news-card.component\n  @Input('img') cardImgUrl:string = 'https://developers.elementor.com/docs/assets/img/elementor-placeholder-image.png';\n\n  //Propriedades do titulo da notícia e tratando o dado para gerar preview\n  @Input('title') cardTitle:string = 'Placeholder Title';\n  cardTitlePrev:string;\n\n  //Propriedades do corpo de texto da notícia e tratando o dado para gerar preview\n  @Input('body') cardBody:string = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in';\n  cardBodyPrev:string;\n\n  @Input('id') cardId:number;\n\n  //Definindo string para 'routerLink' com cardId como parâmetro\n  detailsLink:string;\n  detailsParams:{};\n\n  constructor(private api:ApiService) { }\n\n  ngOnInit(): void {\n    \n    //Inicializando url de router detailsLink e parâmetros\n    this.detailsLink = '/news-detail'\n    this.detailsParams = { id: this.cardId}\n\n    //Utilizando 'textToPrev' para encurtar o texto do titulo e fazer a preview\n    this.cardTitlePrev = textToPrev(this.cardTitle,80);\n    \n    //Utilizando 'textToPrev' para encurtar o texto do body e fazer a preview\n    this.cardBodyPrev = textToPrev(this.cardBody,97);\n\n    console.log(`${this.cardTitle}: id: ${this.cardId}`)\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['cardTitle'] || changes['cardBody']) {\n      this.cardTitlePrev = textToPrev(this.cardTitle, 80);\n      this.cardBodyPrev = textToPrev(this.cardBody, 97);\n    }\n    if (changes['cardId']) {\n      this.detailsParams = { id: this.cardId };\n    }\n  }\n\n}\n","<article class=\"news-card\">\n    <figure class=\"news-card-figure\">\n        <img class=\"news-card-figure-img\" [src]=\"cardImgUrl\" onerror=\"this.src ='./assets/placeholderImg.jpg'\" [alt]=\"cardTitle\">\n    </figure>\n    <div class=\"news-card-content-div\">\n        <section class=\"news-card-content\">\n        <div class=\"title-div\">\n            <h4 class=\"news-card-title\">{{cardTitlePrev}}</h4>\n        </div>\n        <div class=\"paragraph-div\">\n            <p class=\"news-card-paragraph\">{{cardBodyPrev}}</p>\n        </div>\n        <button class=\"proj-link\" [routerLink]=\"detailsLink\" [queryParams]=\"detailsParams\">Ler mais</button>\n    </section>\n    </div>\n</article>","import { Component, OnInit } from '@angular/core';\n\n//Importando ActivatedRoute para tratar parâmetros do routerLink\nimport { ActivatedRoute } from '@angular/router';\n\n//importando model 'News'\nimport { News } from '../models/news.model';\n\n//Importando 'ApiService'\nimport { ApiService } from '../services/api-service.service';\n\n@Component({\n  selector: 'app-news-detail',\n  templateUrl: './news-detail.component.html',\n  styleUrls: ['./news-detail.component.css']\n})\nexport class NewsDetailComponent implements OnInit {\n\n  paramId:number;\n  NewsObj:News;\n\n  constructor(private api:ApiService, private route: ActivatedRoute,) { }\n\n  ngOnInit(): void {\n\n     this.route.queryParamMap.subscribe((param)=>{\n      this.paramId = +param.get('id');\n     })\n\n    this.api.getNewsById(this.paramId).subscribe((data)=>{\n      this.NewsObj = data\n    })\n\n  }\n\n}\n","<article>\r\n    <aside class=\"author-detail\">\r\n        <div>\r\n            <figure  class=\"author-detail-figure\">\r\n                <img src=\"./assets/blankUser.png\" alt=\"author image\">\r\n                <figcaption><b>Escrito por: </b>Author P. H. PlaceHolder</figcaption>\r\n            </figure>\r\n        </div>\r\n        <time datetime=\"DD-MMM-YYY\"><b>Modificado em: </b>{{NewsObj.createdAt}}</time>\r\n    </aside>\r\n    <main>\r\n        <section class=\"news-detail-content\">\r\n            <figure class=\"news-detail-figure\">\r\n                <img [src]=\"NewsObj.image\" onerror=\"this.src='./assets/placeholderImg.jpg'\" [alt]=\"NewsObj.title\">\r\n                <figcaption>{{NewsObj.title}} Poster</figcaption>           \r\n            </figure>\r\n            <div class=\"news-detail-text\">\r\n                <p class=\"news-detail-paragraph\">{{NewsObj.body}}</p>\r\n            </div>\r\n        </section>\r\n    </main>\r\n</article>\r\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../services/api-service.service';\nimport { News } from '../models/news.model';\n\n@Component({\n  selector: 'app-news-page',\n  templateUrl: './news-page.component.html',\n  styleUrls: ['./news-page.component.css']\n})\nexport class NewsPageComponent implements OnInit {\n\n//Injentando ApiService no componente\n  constructor(private api:ApiService) { }\n\n  //Declarando array de 'News' e  Objeto 'News'\n  newsArr:News[] = []; \n  newsObj:News;\n  \n  ngOnInit(): void {\n\n    //Retornando Observable<News[]> e definindo valor de newsArr\n    this.api.getAllNews().subscribe(\n      (obsNews)=>{\n         this.newsArr = obsNews\n      })\n  }\n\n}\n","<section class=\"news-page\">\n    <app-news-card class=\"news-card-item\" *ngFor=\"let news of newsArr\"\n        [img]=\"news.image\"\n        [title]=\"news.title\"\n        [body]=\"news.body\"\n        [id]=\"news.id\"\n    ></app-news-card>\n</section>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-header',\n  templateUrl: './page-header.component.html',\n  styleUrls: ['./page-header.component.css']\n})\nexport class PageHeaderComponent implements OnInit {\n\n  //Definindo propriedades do header component\n  headerTitle:string = 'Exibindo resultados de busca por \"Covid 19\"' ;\n  headerSub:string = 'Encontramos um total de 20 resultados para sua busca';\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<header class=\"page-header\">\n        <h1 class=\"page-header-title\">{{headerTitle}}</h1>\n        <p class=\"page-header-subtitle\">{{headerSub}}</p>    \n</header> ","\n//Service responsável por lidar com requests GET e POST\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { News } from '../models/news.model';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ApiService {\n\n  //Definindo URL da api e seu escopo\n  private ApiUrl = 'https://5cf9ae9df26e8c00146cff8d.mockapi.io/api/v1/post/'\n\n  //Construindo 'HttpClient' para fazer requests\n  constructor( private http: HttpClient ) { }\n\n  //Método GET para retornar um Array de notícias → classe 'News'\n  getAllNews():Observable<News[]> {\n  \n    //Retornando 'Observable' e utilizando o método pipe para transformar a data e validar a classe \n    return this.http.get<any[]>(this.ApiUrl).pipe(\n    \n      //Validando 'Observable' como um Array de 'News'\n      map((data)=>{\n\n        //Definindo variáveis\n        let transformedData:any;\n        let validData:News[];\n        console.log(data)\n        \n        //Validando como Array\n        if (Array.isArray(data)){\n\n          //Transformando items em News\n          transformedData = data.map((item)=>{return News.transformNews(item)});\n          console.log(transformedData)\n\n          //Retornando items validados como News\n          validData = transformedData.filter(News.isValid)\n          console.log(validData)\n        }else{\n          throw new Error('Observable is not a valid News Array');        \n        }\n\n        return validData;\n\n      }))}\n\n  //Método GET para retornar uma notícia especifica aceitando como parâmetro id:numero\n  getNewsById(id:number):Observable<News>{\n  \n    //Definindo nova url com ID como parâmetro\n    let IdUrl = `${this.ApiUrl}${id}`\n    \n    //Definindo Object News para return\n    let newsObj:News; \n\n    //Retornando 'Observable\" e utilizando pipe para transformar em 'News' e validação\n    return this.http.get<any>(IdUrl).pipe(\n      map((data)=>{\n        \n        //Verificando se a request retorna apenas um item\n        if(!Array.isArray(data)){\n        \n          //Transformando resposta em 'News'\n          newsObj = News.transformNews(data);\n          \n          //Validando Objeto\n          if(News.isValid(newsObj)){\n          \n            return newsObj\n\n          }else{\n            throw new Error('Data is not a valid News Object')\n          }\n          \n        }else{\n          throw new Error('Data return more than one item')\n        } \n        \n      }))}\n\n  //Método POST para gravar News criada\n  postNews(data:News):void{\n\n    //Validando input do usuário como News Object\n    if(News.isValid(data)){\n\n    //Criando requisição POST para enviar dados com fetch\n    fetch(this.ApiUrl,\n      {\n        method: 'POST',\n        headers: {'Content-type': 'application/json'},\n        body: JSON.stringify(data),\n      \n      }).then((response)=>{response.json()})\n        .then((postResult) => {console.log(postResult)})\n\n    }else{\n      throw new Error('POST not executed because Data is not valid News')\n    }\n  }\n\n  //Método para criar News.ID\n  getValidId():Observable<number>{\n    //Definindo Array de News\n    let newsArr:News[];\n\n    //Definindo Array de News.id\n    let idArr:number[];\n\n    //Chamando GET all\n    return this.getAllNews().pipe(\n\n      //Tratando Observable\n      map((data)=>{\n      \n        newsArr =  data;\n\n        //Validando newsArr como Array\n        if(Array.isArray(newsArr)){\n          \n          //Logica para retornar um Array de News.id ordenado\n          idArr = data.map((news)=>{ return news.id})\n          idArr.sort((a:number, b:number) => a - b)\n          console.log(idArr)\n          \n          //Validando idArr e definindo o próximo ID valid\n          if(idArr.length > 0){\n            let validId:number = idArr[idArr.length - 1] + 1   \n\n            return validId;\n          }else{\n            throw new Error('idArr is empty');\n          }\n\n        }else{\n          throw new Error (\"couldn't get valid ID\") \n        }\n    }))};\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-side-menu',\n  templateUrl: './side-menu.component.html',\n  styleUrls: ['./side-menu.component.css']\n})\nexport class SideMenuComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<aside class=\"side-bar-section\">\n    <div class=\"side-bar-section-category-div\">\n            <h5 name=\"side-bar-section-category-title\">Categorias</h5>\n            <ul name=\"side-bar-section-category-list\">\n                <li class=\"category-list-item\"><a href=\"\">Lorem ipsum dolor</a></li>\n                <li class=\"category-list-item\"><a href=\"\">Lorem ipsum dolor</a></li>\n                <li class=\"category-list-item\"><a href=\"\">Lorem ipsum dolor</a></li>\n                <li class=\"category-list-item\"><a href=\"\">Lorem ipsum dolor</a></li>\n            </ul>\n    </div>\n    <div class=\"side-bar-section-search-div\">\n        <label for=\"search-input\" class=\"search-div-title\">Procurando alguma notícia?</label>\n        <div class=\"search-div-input\">\n            <input id=\"search-input\" placeholder=\"Pesquisar por...\">\n            <button></button>\n        </div>\n    </div>\n    <nav class=\"nav-bar\">\n        <div class=\"home-div\">\n            <a routerLink=\"\"><img class=\"box-shadow\" src=\"./assets/home.png\" alt=\"home icon\"></a>\n        </div>\n        <ul>\n            <li><a class=\"proj-link\" routerLink=\"news-detail\">Detalhes</a></li>\n            <li><a class=\"proj-link\" routerLink=\"more-news\">Sua Notícia</a></li>\n        </ul>\n        </nav>\n</aside>\n","//Arquivo utils para funções de apoio\r\n\r\n//Função para encurtar texto com finalidade de criar os news-card\r\nexport function textToPrev(text:string,index:number):string{\r\n  let preview:string;\r\n\r\n    //Transformando texto para uma string de 'index' characters \r\n    if(text.length > index){\r\n      preview = text.slice(0,index);\r\n    }else{\r\n     return preview = text;\r\n    }\r\n\r\n  return `${preview}...`;\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}