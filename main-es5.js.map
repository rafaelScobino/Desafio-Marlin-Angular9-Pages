{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/models/news.model.ts","webpack:///src/app/more-news/more-news.component.ts","webpack:///src/app/more-news/more-news.component.html","webpack:///src/app/more-news/news-form/news-form.component.ts","webpack:///src/app/more-news/news-form/news-form.component.html","webpack:///src/app/more-news/post-feedback/post-feedback.component.ts","webpack:///src/app/more-news/post-feedback/post-feedback.component.html","webpack:///src/app/news-card/news-card.component.ts","webpack:///src/app/news-card/news-card.component.html","webpack:///src/app/news-detail/news-detail.component.ts","webpack:///src/app/news-detail/news-detail.component.html","webpack:///src/app/news-page/news-page.component.ts","webpack:///src/app/news-page/news-page.component.html","webpack:///src/app/page-header/page-header.component.ts","webpack:///src/app/page-header/page-header.component.html","webpack:///src/app/services/api-service.service.ts","webpack:///src/app/side-menu/side-menu.component.ts","webpack:///src/app/side-menu/side-menu.component.html","webpack:///src/app/utils/newsUtils.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","onSameUrlNavigation","providers","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","bootstrap","News","createdAt","image","body","createNews","item","isValid","parseInt","console","error","data","length","MoreNewsComponent","api","router","testId","ngOnInit","getValidId","subscribe","validId","log","newsForm","newsTitle","newsImgUrl","newsBody","_isPosted","setPost","isPosted","NewsFormComponent","formEvent","newsCreatedAt","Date","toISOString","submitNews","f","valid","updateObjNews","NewsObj","formObj","postNews","next","response","requestOk","formEmit","value","emit","newsId","PostFeedbackComponent","postId","postTitle","feedbackOpts","span","btnText","feedbackRoute","routeParams","goToDetails","navigate","queryParams","NewsCardComponent","cardImgUrl","cardTitle","cardBody","detailsLink","detailsParams","cardId","cardTitlePrev","cardBodyPrev","ngOnChanges","changes","reRoute","NewsDetailComponent","route","queryParamMap","param","paramId","get","getNewsById","cleanDate","routeReuseStrategy","shouldReuseRoute","NewsPageComponent","loadedNewsArr","getAllNews","obsvNews","newsArr","url","includes","searchParam","loadNews","initNews","setActiveCards","searchedArray","searchString","finalString","toLowerCase","isSearchOn","cleanLoadedNews","loadMore","qty","numOfCards","PageHeaderComponent","headerSubtitleNum","headerSubtitleSearch","showSubtitle","showSearch","events","pipe","event","params","headerTitle","headerInputs","headerSubtitle","ApiService","http","ApiUrl","transformedData","validData","Array","isArray","map","IdUrl","newsObj","post","headers","reportProgress","itemsArr","idArr","stringIdArr","sort","a","b","getRndId","rndId","news","Math","floor","random","some","element","providedIn","SideMenuComponent","searchPlaceHolder","randomId","sorte","searchNewsRoute","moreNewsRoute","newsDetailRoute","searchNewsUpdate","searchParams","searchText","searchNews","setInterval","textToPrev","text","index","preview","slice","transformDate","date","newDate","dia","toLocaleString","day","mes","month","ano","year","moreItems","forArr","pushArr","num","untilNum","i","push","newsSearchFilter","filteredArr","filter","routerUrlParams","urlDetails","parseUrl","routeReuse","bol","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ActivatedRoute,Routes, RouterModule } from '@angular/router'\nimport { NewsDetailComponent } from './news-detail/news-detail.component';\nimport { MoreNewsComponent } from './more-news/more-news.component';\nimport { NewsPageComponent } from './news-page/news-page.component';\n\nconst routes: Routes = [\n  {path:'', component: NewsPageComponent},\n  {path:'news-page', component: NewsPageComponent},\n  {path:'news-detail', component:NewsDetailComponent},\n  {path:'more-news', component:MoreNewsComponent}\n\n];\n\n@NgModule({\n  providers:[],\n  imports: [\n  RouterModule.forRoot(routes,\n    //Definindo comportamento de Router para simular 'reload' da rota do componente\n    {onSameUrlNavigation: 'reload'}\n  )],\n  exports: [RouterModule,CommonModule]\n})\nexport class AppRoutingModule { }","import { Component} from '@angular/core';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title = 'marlin-app';\n}  \n","<app-page-header></app-page-header>\n<div class=\"flex-div\">\n  <div class=\"main-content\">\n    <router-outlet></router-outlet>\n  </div>\n  <app-side-menu class=\"side-menu\"></app-side-menu>\n</div>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\n\nimport { AppComponent } from './app.component';\nimport { SideMenuComponent } from './side-menu/side-menu.component';\nimport { NewsCardComponent } from './news-card/news-card.component';\nimport { NewsDetailComponent } from './news-detail/news-detail.component';\nimport { MoreNewsComponent } from './more-news/more-news.component';\nimport { NewsFormComponent } from './more-news/news-form/news-form.component';\nimport { PostFeedbackComponent } from './more-news/post-feedback/post-feedback.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { PageHeaderComponent } from './page-header/page-header.component';\nimport { NewsPageComponent } from './news-page/news-page.component';\n\n//Importando service de requests \nimport { ApiService } from './services/api-service.service';\n\n//Importando modulo para configurar dependências do HttpClient\nimport {HttpClientModule} from '@angular/common/http';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SideMenuComponent,\n    NewsCardComponent,\n    NewsDetailComponent,\n    MoreNewsComponent,\n    PageHeaderComponent,\n    NewsPageComponent,\n    PostFeedbackComponent,\n    NewsFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    \n  ],\n  providers: [\n    ApiService,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","//Modelo da classe \"News\" para tratar requests e padronizar \"api-service\"\r\nexport class News {\r\n  createdAt: string;\r\n  title: string;\r\n  image: string;\r\n  body: string;\r\n  id: number;\r\n\r\n  constructor(createdAt: string, title: string, image: string, body: string, id:number) {\r\n        this.createdAt = createdAt;\r\n        this.title = title;\r\n        this.image = image;\r\n        this.body = body;\r\n        this.id = id;\r\n  }\r\n\r\n  //Método para validar dados antes de criar instância da classe\r\n  static createNews(item:{\r\n    createdAt: string;\r\n    title: string;\r\n    image: string;\r\n    body: string;\r\n    id: string;}): News | null {\r\n    //const inputs = { item.createdAt, item.title, item.image, item.body, item.id };\r\n    if (News.isValid(item)) {\r\n\r\n      return new News(\r\n        item.createdAt, \r\n        item.title, \r\n        item.image, \r\n        item.body, \r\n        parseInt(item.id)\r\n      );\r\n\r\n    } else {\r\n      console.error(\"Invalid News data\");\r\n      return null;\r\n    }\r\n  }\r\n\r\n  //Método de validação da classe\r\n  static isValid(data: any): data is News{\r\n    return data && \r\n        typeof data.createdAt === 'string' && data.createdAt.length > 0 &&\r\n        typeof data.title === 'string' && data.title.length > 0 &&\r\n        typeof data.body === 'string' &&\r\n        typeof data.id === 'string' && data.id != '0'; \r\n  }\r\n\r\n}\r\n","import { Component, OnInit, ViewChild} from '@angular/core';\n\n//Importando 'ApiService'\nimport { ApiService } from '../services/api-service.service';\nimport { Router } from '@angular/router';\nimport { NewsFormComponent } from './news-form/news-form.component';\n\n@Component({\n  selector: 'app-more-news',\n  templateUrl: './more-news.component.html',\n  styleUrls: ['./more-news.component.css']\n})\nexport class MoreNewsComponent implements OnInit   {\n\n\n  @ViewChild('newsForm') newsForm!: NewsFormComponent;\n\n  testId:number=37;\n\n  //Declarando propriedade para 'post-feedback'\n  _isPosted:boolean;\n\n  //Declarando propriedade para WebApi POST\n  validId:string;\n\n\n  constructor(private api:ApiService,private router:Router) { }\n\n  ngOnInit(): void {\n    //Gerando nova ID valida para notícia\n    this.api.getValidId().subscribe((data)=>{\n      this.validId = `${data}`\n      console.log(this.validId)\n    })\n\n  }\n\n  get newsTitle() {\n    return this.newsForm?.newsTitle || '';\n  }\n\n  get newsImgUrl() {\n    return this.newsForm?.newsImgUrl || '';\n  }\n\n  get newsBody() {\n    return this.newsForm?.newsBody || '';\n  }\n\n  get isPosted(){\n    return this._isPosted\n  }\n\n  setPost(isPosted: boolean) {\n    this._isPosted = isPosted;\n  }\n}\n","<app-post-feedback *ngIf=\"isPosted\"\n[isPosted]=\"isPosted\" \n[postId]=\"testId\"\n[postTitle]=\"newsForm.newsTitle\"\n[isValid]=\"newsForm.isValid\"\n[requestOk]=\"newsForm.requestOk\"\n></app-post-feedback>\n<main class=\"your-news\">\n    <div class=\"form-div\">\n        <app-news-form\n        #newsForm\n        [id]=\"validId\"\n        (formEvent)=\"setPost($event)\"\n        ></app-news-form>\n    </div>\n    <section class=\"preview-section\">\n        <app-news-card\n            [title]=\"newsTitle\"\n            [img]=\"newsImgUrl\"\n            [body]=\"newsBody\"\n            [id]=\"validId\"\n        ></app-news-card>\n    </section>\n</main>\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\nimport { News } from 'src/app/models/news.model';\n\nimport { NgForm } from '@angular/forms';\nimport { ApiService } from 'src/app/services/api-service.service';\n\n@Component({\n  selector: 'app-news-form',\n  templateUrl: './news-form.component.html',\n  styleUrls: ['./news-form.component.css']\n})\nexport class NewsFormComponent implements OnInit {\n\n  //Declarando propriedades\n  newsCreatedAt:string;\n  newsTitle:string;\n  newsImgUrl:string;\n  newsBody:string;\n  @Input('id') newsId:string;\n\n  //Declarando Objeto News\n  NewsObj:News;\n\n  //Declarando Objeto do Form\n  formObj: {\n    createdAt: string;\n    title: string;\n    image: string;\n    body: string;\n    id: string;\n  }\n\n  isValid:boolean;\n  requestOk:boolean;\n\n  @Output() formEvent = new EventEmitter<any>();\n\n  constructor(private api:ApiService) { }\n\n  ngOnInit(): void {\n\n    //Atribuindo valor a propriedade\n    this.newsCreatedAt = new Date().toISOString()\n    console.log(this.newsCreatedAt)\n\n  }\n\n  submitNews(f:NgForm){\n\n    if(f.valid){\n      this.updateObjNews(),\n      this.NewsObj = News.createNews(this.formObj)\n      this.api.postNews(this.NewsObj).subscribe({\n        next: (response: News) => {\n          this.requestOk = true;\n          this.isValid = true;\n          console.log('POST succeeded:', response);\n          this.formEmit(true);\n        },\n        error:(error: any) => {\n        console.error('POST failed:', error);\n        this.requestOk = false;\n        this.isValid = true;\n        this.formEmit(true);\n        }\n      })\n    }else{\n    this.isValid = false;\n    this.formEmit(true);\n    }\n  }\n\n  //Método para emitir para o \"parent component\" o booleano de notícia postada \n  formEmit(value:boolean) {\n    this.formEvent.emit(value);\n  }\n\n  updateObjNews():void {\n    this.formObj  = {\n      createdAt:this.newsCreatedAt,\n      title:this.newsTitle,\n      image:this.newsImgUrl,\n      body: this.newsBody,\n      id: this.newsId\n    }\n  }\n\n}\n","<form #newsForm=\"ngForm\" (ngSubmit)=\"submitNews(newsForm)\" class=\"news-form\">\n    <div class=\"input-div\">\n      <label for=\"newsTitle\">Titulo</label>\n      <input class=\"proj-input\" type=\"text\" id=\"newsTitle\" name=\"newsTitle\" required  [(ngModel)]=\"newsTitle\" placeholder=\"Titulo..\">\n    </div>\n    <div class=\"input-div\">\n      <label for=\"newsImgUrl\">Link da image<a id=\"open-link\" href=\"{{newsImgUrl}}\" ><img id=\"open-newsImg\" class=\"box-shadow\" src=\"./assets/openIMG.png\" alt=\"imgUrl\"></a></label>\n      <input class=\"proj-input\" type=\"url\" id=\"newsImgUrl\" name=\"newsImgUrl\" required [(ngModel)]=\"newsImgUrl\" placeholder=\"URL da sua imagem!\">\n    </div>\n    <div class=\"input-div textarea-div\">\n      <label for=\"newsBody\">Texto da sua notícia</label>\n      <textarea class=\"proj-input\" type=\"text\" id=\"newsBody\" name=\"newsBody\" required [(ngModel)]=\"newsBody\" placeholder=\"Escreva sua notícia!\"></textarea>\n    </div>\n      <button type=\"submit\" class=\"proj-btn\" id=\"submit-btn\">ENVIAR POST</button>\n</form>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { routeReuse } from 'src/app/utils/newsUtils';\n\n@Component({\n  selector: 'app-post-feedback',\n  templateUrl: './post-feedback.component.html',\n  styleUrls: ['./post-feedback.component.css']\n})\nexport class PostFeedbackComponent implements OnInit {\n\n  @Input('isPosted') isPosted:boolean;\n  @Input('postId') postId: string;\n  @Input('postTitle') postTitle:string;\n  @Input() isValid:boolean;\n  @Input() requestOk:boolean;\n\n  span:string;\n  btnText:string;\n\n  feedbackRoute:string;\n  routeParams:{id:number, title:string};\n\n  constructor(private router:Router) { }\n\n  ngOnInit(): void {\n    console.log(this.postId)\n    console.log(this.postTitle)\n    this.feedbackOpts()\n  }\n\n  feedbackOpts(){\n\n    if(this.isValid && this.requestOk){\n      this.span = 'Sua Notícia foi enviada com sucesso!';\n      this.btnText = 'Ver Detalhes';\n      this.feedbackRoute = '/news-detail'\n      this.routeParams = {id: parseInt(this.postId), title: this.postTitle}\n    }else if(this.isValid){\n      this.span = 'Processo de envio falhou, tente novamente.';\n      this.btnText = 'Tente Novamente';\n      this.feedbackRoute = '/more-news'\n      this.routeParams = {id: null , title:null}\n    }else{\n      this.span = ' Notícia NÃO enviada, informações invalidas!';\n      this.btnText = 'Tente Novamente';\n      this.feedbackRoute = '/more-news'\n      this.routeParams = {id: null , title:null}\n    }\n\n\n\n  }\n\n  goToDetails(){\n    routeReuse(this.router,false)\n    this.router.navigate(\n    [this.feedbackRoute],\n    { queryParams: this.routeParams })\n  }\n\n}\n","<div class=\"post-feedback\">\n  <div class=\"feedback-box box-shadow\">\n    <div class=\"text-div\">\n      <span>{{span}}</span>\n      <button (click)=\"goToDetails()\" class=\"proj-link\">{{btnText}}</button>\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\n\n//Importando arquivo de utils para acesso a funções de apoio\nimport {routeReuse, textToPrev} from './../utils/newsUtils';\n\n//Importando ApiService para validar url da imagem\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-news-card',\n  templateUrl: './news-card.component.html',\n  styleUrls: ['./news-card.component.css']\n})\nexport class NewsCardComponent implements OnInit,OnChanges {\n\n  //Definindo propriedades para criação dinâmica de news-card.component\n  @Input('img') cardImgUrl:string = 'https://developers.elementor.com/docs/assets/img/elementor-placeholder-image.png';\n\n  //Propriedades do titulo da notícia e tratando o dado para gerar preview\n  @Input('title') cardTitle:string = 'Placeholder Title';\n  cardTitlePrev:string;\n\n  //Propriedades do corpo de texto da notícia e tratando o dado para gerar preview\n  @Input('body') cardBody:string = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in';\n  cardBodyPrev:string;\n\n  @Input('id') cardId:number;\n\n  //Definindo string para 'routerLink' com cardId como parâmetro\n  detailsLink:string;\n  detailsParams:{};\n\n  constructor(private router:Router) { }\n\n  ngOnInit(): void {\n    \n    //Inicializando url de router detailsLink e parâmetros\n    this.detailsLink = '/news-detail'\n    this.detailsParams = { id: this.cardId, title: this.cardTitle}\n\n    // //Utilizando 'textToPrev' para encurtar o texto do titulo e fazer a preview\n    this.cardTitlePrev = textToPrev(this.cardTitle,80);\n    \n    // //Utilizando 'textToPrev' para encurtar o texto do body e fazer a preview\n    this.cardBodyPrev = textToPrev(this.cardBody,97);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n\n    if (changes['cardTitle'] || changes['cardBody']) {\n      this.cardTitlePrev = textToPrev(this.cardTitle, 80);\n      this.cardBodyPrev = textToPrev(this.cardBody, 97);\n      this.detailsParams = { id: this.cardId, title: this.cardTitle}\n    }\n    if (changes['cardId']) {\n      this.detailsParams = { id: this.cardId, title: this.cardTitle };\n    }\n  }\n\n  reRoute(){\n    routeReuse(this.router,false)\n  }\n\n}\n","<article class=\"news-card box-shadow\">\n    <figure class=\"news-card-figure\">\n        <img class=\"news-card-figure-img\" [src]=\"cardImgUrl\" onerror=\"this.src ='./assets/placeholderImg.jpg'\" [alt]=\"cardTitle\">\n    </figure>\n    <div class=\"news-card-content-div\">\n        <section class=\"news-card-content\">\n        <div class=\"title-div\">\n            <h4 class=\"news-card-title\">{{cardTitlePrev}}</h4>\n        </div>\n        <div class=\"paragraph-div\">\n            <p class=\"news-card-paragraph\">{{cardBodyPrev}}</p>\n        </div>\n        <button class=\"proj-link\" (click)=\"reRoute()\" [routerLink]=\"detailsLink\" [queryParams]=\"detailsParams\">Ler mais</button>\n    </section>\n    </div>\n</article>","import { Component, OnInit } from '@angular/core';\n\n//Importando ActivatedRoute para tratar parâmetros do routerLink\nimport { ActivatedRoute, Router } from '@angular/router';\n\n//importando model 'News'\nimport { News } from '../models/news.model';\n\n//Importando 'ApiService'\nimport { ApiService } from '../services/api-service.service';\n\n//Importando função para transformar data do utils\nimport { transformDate } from '../utils/newsUtils';\n\n@Component({\n  selector: 'app-news-detail',\n  templateUrl: './news-detail.component.html',\n  styleUrls: ['./news-detail.component.css']\n})\nexport class NewsDetailComponent implements OnInit {\n\n  paramId:number;\n  NewsObj:News;\n\n  cleanDate:string;\n\n  constructor(private api:ApiService, private route: ActivatedRoute, private router:Router) { }\n\n  ngOnInit(): void {\n\n      //Recebendo e tratando parâmetros da url\n     this.route.queryParamMap.subscribe((param)=>{\n      this.paramId = +param.get('id');\n     })\n\n    this.api.getNewsById(this.paramId).subscribe((data)=>{\n      this.NewsObj = data\n      \n      //Tratando a News.createdAt para data de detalhes\n      this.cleanDate = transformDate(this.NewsObj.createdAt)\n    })\n\n    //Definindo estratégia de rota para impedir o Angular de usar a mesma rota e simular um 'page Refresh'\n    this.router.routeReuseStrategy.shouldReuseRoute = () => { return false; };\n\n  }\n\n}\n","<article>\r\n    <aside class=\"author-detail\">\r\n        <div>\r\n            <figure class=\"author-detail-figure box-shadow\">\r\n                <img src=\"./assets/blankUser.png\" alt=\"author image\">\r\n                <figcaption><b>Escrito por: </b>Author P. H. PlaceHolder</figcaption>\r\n            </figure>\r\n        </div>\r\n        <time><b>Modificado em: </b>{{cleanDate}}</time>\r\n    </aside>\r\n    <main>\r\n        <section class=\"news-detail-content\">\r\n            <figure class=\"news-detail-figure box-shadow\">\r\n                <img [src]=\"NewsObj.image\" onerror=\"this.src='./assets/placeholderImg.jpg'\" [alt]=\"NewsObj.title\">\r\n                <figcaption>{{NewsObj.title}}</figcaption>           \r\n            </figure>\r\n            <div class=\"news-detail-text\">\r\n                <p class=\"news-detail-paragraph\">{{NewsObj.body}}</p>\r\n            </div>\r\n        </section>\r\n    </main>\r\n</article>\r\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../services/api-service.service';\nimport { News } from '../models/news.model';\nimport { moreItems, newsSearchFilter, routeReuse, routerUrlParams } from '../utils/newsUtils';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { filter } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-news-page',\n  templateUrl: './news-page.component.html',\n  styleUrls: ['./news-page.component.css']\n})\nexport class NewsPageComponent implements OnInit {\n\n//Injentando ApiService no componente\n  constructor(private api:ApiService,private router:Router) { }\n\n  //Declarando array de 'News' e  Objeto 'News'\n  loadedNewsArr:News[] = []; \n  newsArr:News[];\n\n  //Declarando quantidade de notícias\n  numOfCards:number;\n\n  //Declarando booleano para comportamento do loadMore\n  isSearchOn:boolean;\n  \n  ngOnInit(): void {\n    console.log('newspage Ignited')\n    //Retornando Observable<News[]> e definindo valor de newsArr\n    this.api.getAllNews().subscribe(\n      (obsvNews)=>{\n         this.newsArr = obsvNews;\n         console.log(this.newsArr)\n         if(this.router.url.includes('searchParams')){\n          let searchParam = routerUrlParams(this.router)['searchParams'];\n            this.loadNews(searchParam)\n         }else{\n          this.initNews()\n          this.setActiveCards()\n         }\n      }\n    )\n    routeReuse(this.router,true)\n  }\n\n  //Método para carregar notícias no array que gera news-card\n  initNews():void{\n      console.log('init news')\n      this.loadedNewsArr = moreItems(this.newsArr,this.loadedNewsArr,6);\n      this.setActiveCards()\n  }\n\n  //Método para retornar Array filtrado pela pesquisa\n  searchedArray(searchString:string):News[]{\n    console.log('searched')\n    let finalString:string = searchString.toLowerCase()\n    return newsSearchFilter(this.newsArr,finalString)\n  }\n\n  //Método para fazer a lógica de pesquisa e inicialização do component\n  loadNews(searchParam:string):void{\n      console.log('loadNews')\n        this.isSearchOn = true;\n        this.loadedNewsArr = this.searchedArray(searchParam)\n        \n  }\n\n  cleanLoadedNews(){\n    this.loadedNewsArr = []\n  }\n\n  //Método para carregar mais news-card\n  loadMore():void{\n    if(this.isSearchOn){\n      this.cleanLoadedNews()\n      this.isSearchOn = false;\n    }\n    console.log('loadMore')\n    this.loadedNewsArr =  moreItems(this.newsArr,this.loadedNewsArr,6);\n    this.setActiveCards()\n    this.router.navigate([],{queryParams:{qty:this.numOfCards}});\n  }\n\n   //Método para dar update na propriedade 'numOfCards'\n  setActiveCards():void{\n    this.numOfCards = this.loadedNewsArr.length\n    console.log(this.numOfCards)\n  }\n\n}\n","<section class=\"news-page\">\n    <app-news-card class=\"news-card-item\" *ngFor=\"let news of loadedNewsArr\"\n        [img]=\"news.image\"\n        [title]=\"news.title\"\n        [body]=\"news.body\"\n        [id]=\"news.id\"\n    ></app-news-card>\n</section>\n<div class=\"load-more-div\">\n   \n        <button (click)=\"loadMore()\" class=\"proj-btn\">CARREGAR MAIS NOTÍCIAS</button>\n\n</div>\n\n","import { Component, Input, OnChanges, OnInit, SimpleChange, SimpleChanges } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport { Url } from 'url';\nimport { routerUrlParams } from '../utils/newsUtils';\n\n@Component({\n  selector: 'app-page-header',\n  templateUrl: './page-header.component.html',\n  styleUrls: ['./page-header.component.css']\n})\nexport class PageHeaderComponent implements OnInit {\n\n  //Definindo propriedades do header component\n  @Input('title') inputTitle:string;\n  @Input('subtitle') inputSubtitle: string;\n\n  headerTitle:string;\n  headerSubtitle:string;\n  headerSubtitleNum:number = 6;\n  headerSubtitleSearch:string = '';\n\n  //Propriedade para NgIf\n  showSubtitle:boolean = true;\n  showSearch: boolean = false;\n\n  constructor(private route: ActivatedRoute, private router:Router) { }\n\n  \n  ngOnInit(): void {\n    this.router.events.pipe(\n      filter(event => event instanceof NavigationEnd)\n    ).subscribe(() => {\n\n      let url = this.router.url;\n      let params = routerUrlParams(this.router);\n\n      if(params['title']){\n        this.showSubtitle = false;\n        this.showSearch = false;\n        this.headerTitle = params['title'];\n\n      }else if(params['qty']) {\n        this.showSubtitle = true;\n        this.showSearch = false;\n        this.headerSubtitleNum = params['qty']\n        this.headerInputs(url)\n\n      }else if(params['searchParams']){\n        this.showSubtitle = true;\n        this.showSearch = true;\n        this.headerSubtitleSearch  = params['searchParams']\n        this.headerInputs(url)\n\n      }else{\n        this.showSubtitle = true;\n        this.showSearch = false;\n        this.headerInputs(url)\n\n      }\n    }) \n   }\n\n  private headerInputs(url: string): void {\n\n    if (url.includes('/news-detail')) {\n      this.headerTitle = 'Estou com sorte!';\n      this.headerSubtitle = 'Pagina que te traz notícias aleatórias!';\n\n    } else if (url.includes('/more-news')) {\n      this.headerTitle = 'Crie sua Própria Notícia !';\n      this.headerSubtitle = 'Preencha o Formulário, Poste e nos envie sua contribuição !';\n\n    } else if (url.includes('searchParams')) {\n      this.headerTitle = 'Sua Página de Notícias Feita em Angular 9!';\n      this.headerSubtitle = `Aqui estão os resultados para sua busca: `;\n\n    }else{\n      this.headerTitle = 'Sua Página de Notícias Feita em Angular 9!';\n      this.headerSubtitle = `Encontramos um total de ${this.headerSubtitleNum} resultados para sua busca`;\n\n    }\n  }\n}\n   \n      \n","<header class=\"page-header\">\n        <h1 class=\"page-header-title\">{{headerTitle}}</h1>\n        <p *ngIf=\"showSubtitle\" class=\"page-header-subtitle\">{{headerSubtitle}} <b *ngIf=\"showSearch\">{{headerSubtitleSearch}}</b></p>    \n</header> ","\n//Service responsável por lidar com requests GET e POST\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { News } from '../models/news.model';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ApiService {\n\n  //Definindo URL da api e seu escopo\n  private ApiUrl = 'https://5cf9ae9df26e8c00146cff8d.mockapi.io/api/v1/post/'\n\n  //Construindo 'HttpClient' para fazer requests\n  constructor( private http: HttpClient ) { }\n\n  //Método GET para retornar um Array de notícias → classe 'News'\n  getAllNews():Observable<News[]> {\n  \n    //Retornando 'Observable' e utilizando o método pipe para transformar a data e validar a classe \n    return this.http.get<any[]>(this.ApiUrl).pipe(\n    \n      //Validando 'Observable' como um Array de 'News'\n      map((data)=>{\n\n        //Definindo variáveis\n        let transformedData:any;\n        let validData:News[];\n       \n        //Validando como Array\n        if (Array.isArray(data)){\n\n          //Transformando items em News\n          transformedData = data.map((item)=>{return News.createNews(item)});\n\n          validData = transformedData;\n\n        }else{\n          throw new Error('Observable is not an Array');        \n        }\n\n        return validData;\n\n      }))}\n\n  //Método GET para retornar uma notícia especifica aceitando como parâmetro id:numero\n  getNewsById(id:number):Observable<News>{\n  \n    //Definindo nova url com ID como parâmetro\n    let IdUrl = `${this.ApiUrl}${id}`\n    \n    //Definindo Object News para return\n    let newsObj:News; \n\n    //Retornando 'Observable\" e utilizando pipe para transformar em 'News' e validação\n    return this.http.get<any>(IdUrl).pipe(\n      map((data)=>{\n        \n        //Verificando se a request retorna apenas um item\n        if(!Array.isArray(data)){\n        \n          //Transformando resposta em 'News'\n          newsObj = News.createNews(data);\n          \n            return newsObj;\n          \n        }else{\n          throw new Error('Data return more than one item')\n        } \n        \n      }))}\n\n  //Método POST para gravar News criada\n  postNews(data:News):Observable<News>{\n\n    //Validando input do usuário como News Object\n    if( data instanceof News) {\n\n    //Criando POST para envio dados\n    return this.http.post<News>('https://jsonplaceholder.typicode.com/posts',data,{ \n    headers:{'Content-type': 'application/json'},\n    reportProgress: true\n    })\n      \n    }else{\n      throw new Error('POST not executed because Data is not valid News')\n    }\n  }\n\n  //Método para criar um novo News.ID valido considerando numero de elementos retornados pelo GET\n  getValidId():Observable<number>{\n    //Definindo Array de items\n    let itemsArr:any[];\n\n    //Definindo Array de items.id\n    let idArr:number[];\n\n    //Chamando GET all\n    return this.http.get<any>(this.ApiUrl).pipe(\n\n      //Tratando Observable\n      map((data)=>{\n      \n        itemsArr =  data;\n\n        //Validando itemsArr como Array\n        if(Array.isArray(itemsArr)){\n          \n          //Logica para retornar um Array de item.id ordenado\n          let stringIdArr = data.map((item: { id: any; })=>{ return item.id})\n          idArr = stringIdArr.map((item: string) => parseInt(item))\n          idArr.sort((a:number, b:number) => a - b)\n          \n          //Validando idArr e definindo o próximo ID valid\n          if(idArr.length > 0){\n            let validId:number = idArr[idArr.length - 1] + 1   \n\n            return validId;\n          }else{\n            throw new Error('idArr is empty');\n          }\n\n        }else{\n          throw new Error (\"couldn't get valid ID\") \n        }\n    }))};\n\n  //Método para criar News.ID\n  getRndId():Observable<number>{\n    //Definindo Array de News\n    let newsArr:News[];\n\n    //Definindo Array de News.id\n    let idArr:number[];\n\n    //Definindo ID randômico de retorno\n    let rndId:number;\n\n    //Chamando GET all\n    return this.getAllNews().pipe(\n\n      //Tratando Observable\n      map((data)=>{\n      \n        newsArr =  data;\n\n        //Validando newsArr como Array\n        if(Array.isArray(newsArr)){\n          \n          //Logica para retornar um Array de News.id \n          idArr = data.map((news)=>{ return news.id})\n          \n          //Validando idArr e definindo o ID randômico\n          if(idArr.length > 0 && idArr.length === 1){\n            rndId = idArr[0];    \n            return rndId;\n\n          }else if(idArr.length > 1){\n\n            //Lógica para gerar o rndID e validar se ele pertence ao idArr\n            idArr.sort((a,b) =>  a - b)\n            do{\n              rndId = Math.floor(Math.random() * (idArr[idArr.length - 1]))\n            }while(!idArr.some(element => element === rndId ))\n\n            return rndId;\n\n          }\n          \n          else{\n            throw new Error('idArr is empty');\n          }\n\n        }else{\n          throw new Error (\"couldn't get rndID\") \n        }\n    }))};\n\n}\n","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { ApiService } from '../services/api-service.service';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport { routeReuse } from '../utils/newsUtils';\n\n@Component({\n  selector: 'app-side-menu',\n  templateUrl: './side-menu.component.html',\n  styleUrls: ['./side-menu.component.css']\n})\nexport class SideMenuComponent implements OnInit {\n  //Declarando parâmetros de pesquisa\n  @Input() searchText:string;\n\n  //Declarando place holder\n  searchPlaceHolder:string = 'Pesquisar por...';\n\n  //Declarando rotas\n  moreNewsRoute:string;\n  newsDetailRoute:string;\n  searchNewsRoute:string;\n\n  //Declarando parâmetros de Header\n  detailsParams:{};\n  searchParams:{};\n  \n  //Declarando propriedade de News ID randômica\n  randomId:number;\n\n  constructor(private api:ApiService, private router: Router) { }\n\n  ngOnInit(): void {\n\n      //Atribuindo primeiro valor a randomId\n      this.api.getRndId().subscribe(\n        (data)=>{\n          this.randomId = data;\n          \n          //Atribuindo valor a propriedade de parâmetro assincronicamente para esperar randomId ter valor e evitar 'undefined'\n          this.detailsParams = { id: this.randomId, sorte: 1};\n        }\n      )\n\n      //Verificando alteração no router para gerar nova randomId\n     this.router.events.pipe(\n        filter(event => event instanceof NavigationEnd)).subscribe(\n          () => {\n          \n          //Reatribuindo valor a randomId\n          this.api.getRndId().subscribe(\n            (data)=>{this.randomId = data;\n            this.detailsParams = { id: this.randomId, sorte: 1};})\n        }\n      );\n\n    this.searchNewsRoute = './'\n    this.moreNewsRoute = \"/more-news\"\n    this.newsDetailRoute = \"/news-detail\"\n  }\n\n  searchNewsUpdate(){\n    this.searchParams = {searchParams: this.searchText } ;\n    console.log('SearchFuncActiv')\n  }\n\n  searchNews(){\n    if(this.searchText){\n      routeReuse(this.router,false)\n      this.router.navigate([this.searchNewsRoute],{queryParams: this.searchParams})\n    }else{\n      this.searchPlaceHolder = 'Texto inválido'\n      setInterval(()=>{this.searchPlaceHolder = 'Pesquisar por...'},3000)\n    }\n    this.searchText = ''\n    \n  }\n\n  reRoute(){\n    routeReuse(this.router,false)\n  }\n\n}\n","<aside class=\"side-bar-section\">\n    <div class=\"side-bar-section-category-div\">\n            <h5 name=\"side-bar-section-category-title\">Categorias</h5>\n            <ul name=\"side-bar-section-category-list\">\n                <li class=\"category-list-item\"><a href=\"./\">Lorem ipsum dolor</a></li>\n                <li class=\"category-list-item\"><a href=\"./\">Lorem ipsum dolor</a></li>\n                <li class=\"category-list-item\"><a href=\"./\">Lorem ipsum dolor</a></li>\n                <li class=\"category-list-item\"><a href=\"./\">Lorem ipsum dolor</a></li>\n            </ul>\n    </div>\n    <div class=\"side-bar-section-search-div\">\n        <label for=\"search-input\" class=\"search-div-title\">Procurando alguma notícia?</label>\n        <div class=\"search-div-input box-shadow\">\n            <input type=\"text\" required id=\"search-input\" [(ngModel)]=\"searchText\" (change)=\"searchNewsUpdate()\"   placeholder=\"{{searchPlaceHolder}}\">\n            <button (click)=\"searchNews()\"></button>\n        </div>\n    </div>\n    <nav class=\"nav-bar\">\n        <div class=\"home-div\">\n            <a class=\"proj-link\" href=\"./\">\n                <figure>\n                <img src=\"./assets/home.png\" alt=\"home icon\">\n                <figcaption>Inicio</figcaption>\n                </figure>\n            </a>\n        </div>\n        <ul>\n            <li><a class=\"proj-link\" (click)=\"reRoute()\" [routerLink]=\"newsDetailRoute\" [queryParams]=\"detailsParams\" >Estou com sorte</a></li>\n            <li><a class=\"proj-link\" (click)=\"reRoute()\" [routerLink]=\"moreNewsRoute\" >Sua Notícia</a></li>\n        </ul>\n        </nav>\n</aside>\n","//Arquivo utils para funções de apoio\r\n\r\nimport { Router } from \"@angular/router\";\r\nimport { News } from \"../models/news.model\";\r\n\r\n//Função para encurtar texto com finalidade de criar os news-card\r\nexport function textToPrev(text:string,index:number):string{\r\n  let preview:string;\r\n\r\n    //Transformando texto para uma string de 'index' characters \r\n    if(text.length > index){\r\n      preview = text.slice(0,index);\r\n    }else{\r\n     return preview = text;\r\n    }\r\n\r\n  return `${preview}...`;\r\n}\r\n\r\n//Função para transformar data\r\nexport function transformDate(date:string):string{\r\n    let newDate = new Date(date);\r\n      let dia = newDate.toLocaleString('default',{day: 'numeric'});\r\n      let mes = newDate.toLocaleString('default',{month: 'short'});\r\n      let ano = newDate.toLocaleString('default',{year: 'numeric'});\r\n    let cleanDate =  `${dia} ${mes} ${ano}`;\r\n\r\n    return cleanDate;\r\n}\r\n\r\nexport function moreItems(forArr:any[],pushArr:any[],num:number):any[]{\r\n  let index:number = pushArr.length;\r\n  let untilNum:number\r\n  \r\n    if(pushArr.length > 0 ){\r\n      untilNum = (pushArr.length - 1) + num;\r\n    }else{\r\n      untilNum = num - 1;\r\n    }\r\n      if(untilNum >= forArr.length - 1){ \r\n        untilNum = forArr.length - 1;\r\n      }else{};\r\n\r\n    for(let i = index; i <= untilNum; i++){\r\n      pushArr.push(forArr[i])\r\n    }\r\n\r\n  return pushArr;\r\n}\r\n\r\nexport function newsSearchFilter(newsArr:News[],text:string):News[]{\r\n\r\n  let filteredArr = newsArr.filter((news)=>\r\n    news.title.toLowerCase().includes(text) || news.body.toLowerCase().includes(text)\r\n  )\r\n\r\n  return filteredArr;   \r\n}\r\n\r\nexport function routerUrlParams(router:Router):any{\r\n    let url = router.url\r\n    let urlDetails = router.parseUrl(url);\r\n    let queryParams = urlDetails.queryParams;\r\n    return queryParams;\r\n  }\r\n\r\nexport function routeReuse(router:Router,bol:boolean){\r\n  router.routeReuseStrategy.shouldReuseRoute = () => { return bol; };\r\n}\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}